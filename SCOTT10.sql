/* 회원가입 테이블 생성 */
CREATE TABLE MEMBER (
    MEMBER_NUM NUMBER DEFAULT 0 NOT NULL UNIQUE,
    ID VARCHAR(20) PRIMARY KEY,
    PASSWORD VARCHAR(20) NOT NULL CHECK(LENGTH (PASSWORD) >= 8),
    NAME VARCHAR(20) NOT NULL,
    BIRTH DATE,
    GENDER VARCHAR(1) CHECK(GENDER = 'M' OR GENDER = 'F'),
    EMAIL VARCHAR(20) UNIQUE,  -- 이메일 중복되면 안되므로 unique 추가
    PHONE VARCHAR(20) NOT NULL UNIQUE,
    RECOMMENDER_ID VARCHAR(20) , 
    REG_DATE DATE DEFAULT SYSDATE
);
COMMIT; 

ALTER TABLE MEMBER 
    MODIFY CONSGENDER CHECK(GENDER = 'M' OR GENDER = 'm' OR GENDER = 'F' OR GENDER = 'f');
    
SELECT * FROM MEMBER;
DROP TABLE MEMBER;

INSERT INTO MEMBER VALUES (1, 'haribo', '12345678', '하리보', '20/01/05', 'F', 'thkd@naver.com', '010-5794-5515', 'redharibo', sysdate);
INSERT INTO MEMBER VALUES (2, 'minion', '4A5B6C7D', '밥밥', '08/04/06', 'M', 'kingbob@naver.com', '010-1234-5515', 'redharibo', sysdate);
INSERT INTO MEMBER VALUES (3, 'redharibo', '_1^2233$4!', '하리보2', '21/07/09', 'F', 'reha@naver.com', '010-7913-2729', 'haribo', sysdate);
INSERT INTO MEMBER VALUES (4, 'guru', '445353D44', '빌런그루', '99/09/09', 'M', 'devilguru@gmail.com', '010-4444-6666', 'redharibo', sysdate);
INSERT INTO MEMBER VALUES (5, 'octopus', 'abcd8888', '문어숙회', '88/08/08', 'M', 'mooneo88@gmail.com', '010-8888-8888', 'minion', sysdate);

SELECT * FROM MEMBER;

/* 목록 */

CREATE TABLE BOARD (
    ENUM NUMBER,
    ENAME VARCHAR2(20)  PRIMARY KEY  
);

INSERT INTO BOARD VALUES (1,'공지사항');
INSERT INTO BOARD VALUES (2,'등업게시판');
INSERT INTO BOARD VALUES (3,'자유게시판');
INSERT INTO BOARD VALUES (4,'질문게시판');
INSERT INTO BOARD VALUES (5,'스터디모집');
INSERT INTO BOARD VALUES (6,'구인구직');
INSERT INTO BOARD VALUES (7,'이벤트');

SELECT * FROM BOARD;

-- 글쓰기
-- 글쓰기 테이블 생성
CREATE TABLE WRITE (
    WRITE_NAME VARCHAR(20) NOT NULL REFERENCES BOARD(ENAME),
    WRITE_NUM NUMBER NOT NULL,
    WRITE_TITLE VARCHAR2(200) NOT NULL,
    WRITE_CONTENTS VARCHAR2(4000),
    WRITE_ID VARCHAR(20) NOT NULL,
    WRITE_RDATE DATE DEFAULT SYSDATE,
    WRITE_VIEWCNT NUMBER DEFAULT 0,
    PUBLIC_FILE VARCHAR(1) DEFAULT 'Y' CHECK ( PUBLIC_FILE = 'Y' OR PUBLIC_FILE = 'N'), --(공개 범위)

PRIMARY KEY(WRITE_NUM)
);

-- 글 입력
INSERT INTO WRITE VALUES('공지사항',1,'다들태풍조심','죽을뻔했어요ㅠ','user11','2022/03/02',0,'Y');
INSERT INTO WRITE VALUES('자유게시판',2,'이벤트신청','코딩책무나받고싶어요','user21','2022/03/02',0,'Y');
INSERT INTO WRITE VALUES('스터디모집',3,'스터디원구해요','자바의정석한자리남았어요','user34','2022/03/02',0,'Y');
INSERT INTO WRITE VALUES('등업게시판',4,'등업신청합니다','정회원시켜주세요','user34','2022/03/02',0,'Y');
INSERT INTO WRITE VALUES('자유게시판',5,'명절이네요','명절잘보내세요!!^^','user11','2022/03/02',0,'Y');

SELECT * FROM WRITE;

-- 좋아요 테이블
CREATE TABLE LIKE_TABLE(
LIKE_CNT NUMBER DEFAULT 0,
WRITE_NUM NUMBER REFERENCES WRITE(WRITE_NUM)
);

-- 좋아요 누르기 (첫 좋아요시 INSERT를 누른후에 UPDATE, 이후 UPDATE만)
INSERT INTO LIKE_TABLE (WRITE_NUM)  VALUES (3);
UPDATE LIKE_TABLE
	SET LIKE_CNT = LIKE_CNT + 1 
	WHERE WRITE_NUM = 3;

-- 좋아요 확인 
SELECT * FROM LIKE_TABLE;

-- 좋아요랑 싫어요 둘 다 확인
SELECT D.WRITE_NUM AS 글번호, L.LIKE_CNT AS 좋아요, D.DISLIKE_CNT AS 싫어요   
FROM DISLIKE_TABLE D, LIKE_TABLE L
WHERE D.WRITE_NUM = L.WRITE_NUM;

DROP TABLE DISLIKE_TABLE;

-- 싫어요 테이블
CREATE TABLE DISLIKE_TABLE(
DISLIKE_CNT NUMBER DEFAULT 0,
WRITE_NUM NUMBER REFERENCES WRITE(WRITE_NUM)
);

-- 싫어요 누르기 (첫 싫어요시 INSERT를 누른후에 UPDATE, 이후 UPDATE만)
INSERT INTO DISLIKE_TABLE (WRITE_NUM) VALUES (3);

UPDATE DISLIKE_TABLE
	SET DISLIKE_CNT = DISLIKE_CNT + 1 
	WHERE WRITE_NUM = 3;

-- 싫어요 확인 
SELECT * FROM DISLIKE_TABLE;

-- 좋아요랑 싫어요 둘 다 확인
SELECT D.WRITE_NUM AS 글번호, L.LIKE_CNT AS 좋아요, D.DISLIKE_CNT AS 싫어요   
FROM DISLIKE_TABLE D, LIKE_TABLE L
WHERE D.WRITE_NUM = L.WRITE_NUM;

-- 댓글 테이블 생성
CREATE TABLE REPLY(
    REPLY_NUM NUMBER NOT NULL, -- 댓글 고유번호
    WRITE_NUM NUMBER NOT NULL REFERENCES WRITE(WRITE_NUM), -- 댓글을 단 글번호
    WRITE_ID VARCHAR2(20) NOT NULL ,
    REPLY_CONTENTS VARCHAR2(360) NOT NULL,
    PRIMARY KEY(REPLY_NUM));

-- 댓글 데이터 추가
INSERT INTO REPLY VALUES(1,1 ,'haribo', '좋은하루보내세용ㅎㅎ');
INSERT INTO REPLY VALUES(2,3, 'octopus', '저 스터디 하고싶어요!!');
INSERT INTO REPLY VALUES(3,3, 'haribo', '저도 스터디 하고싶어요!!');

-- 댓글 확인
SELECT REPLY_NUM 댓글번호, WRITE_NUM 글번호, WRITE_ID 작성자, REPLY_CONTENTS 내용 FROM REPLY;

DROP TABLE REPLY_LIKE;

-- 댓글 좋아요 테이블
CREATE TABLE REPLY_LIKE(
REPLY_LIKE_CNT NUMBER DEFAULT 0,
REPLY_LIKE_NUM NUMBER REFERENCES REPLY(REPLY_NUM)
);

-- 댓글 좋아요 누르기 (첫 좋아요시 INSERT를 누른후에 UPDATE, 이후 UPDATE만)
INSERT INTO REPLY_LIKE(REPLY_LIKE_NUM) VALUES (2);
INSERT INTO REPLY_LIKE(REPLY_LIKE_NUM) VALUES (3);

UPDATE REPLY_LIKE
	SET REPLY_LIKE_CNT = REPLY_LIKE_CNT + 1 
	WHERE REPLY_LIKE_NUM = 2;

UPDATE REPLY_LIKE
	SET REPLY_LIKE_CNT = REPLY_LIKE_CNT + 1 
	WHERE REPLY_LIKE_NUM = 3;

-- 댓글 좋아요 확인 
SELECT * FROM REPLY_LIKE;

-- 댓글 좋아요랑 싫어요 둘 다 확인
SELECT D.REPLY_NUM AS 글번호, L.REPLY_LIKE_CNT AS 좋아요, D.REPLY_DISLIKE_CNT AS 싫어요   
FROM REPLY_DISLIKE D, REPLY_LIKE L
WHERE D.REPLY_NUM = L.REPLY_NUM;